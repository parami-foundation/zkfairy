"use strict";(self.webpackChunkzkfairy=self.webpackChunkzkfairy||[]).push([[422],{10422:function(j,b,r){r.d(b,{offchainLookup:function(){return C},offchainLookupSignature:function(){return S}});var v=r(61376),p=r(96070),l=r(62027),m=r(35280);class L extends l.G{constructor({callbackSelector:e,cause:t,data:c,extraData:i,sender:d,urls:a}){var f;super(t.shortMessage||"An error occurred while fetching for an offchain result.",{cause:t,metaMessages:[...t.metaMessages||[],(f=t.metaMessages)!=null&&f.length?"":[],"Offchain Gateway Call:",a&&["  Gateway URL(s):",...a.map(u=>`    ${(0,m.Gr)(u)}`)],`  Sender: ${d}`,`  Data: ${c}`,`  Callback selector: ${e}`,`  Extra data: ${i}`].flat()}),Object.defineProperty(this,"name",{enumerable:!0,configurable:!0,writable:!0,value:"OffchainLookupError"})}}class O extends l.G{constructor({result:e,url:t}){super("Offchain gateway response is malformed. Response data must be a hex value.",{metaMessages:[`Gateway URL: ${(0,m.Gr)(t)}`,`Response: ${(0,p.P)(e)}`]}),Object.defineProperty(this,"name",{enumerable:!0,configurable:!0,writable:!0,value:"OffchainLookupResponseMalformedError"})}}class k extends l.G{constructor({sender:e,to:t}){super("Reverted sender address does not match target contract address (`to`).",{metaMessages:[`Contract address: ${t}`,`OffchainLookup sender address: ${e}`]}),Object.defineProperty(this,"name",{enumerable:!0,configurable:!0,writable:!0,value:"OffchainLookupSenderMismatchError"})}}var y=r(78863),E=r(86899),x=r(45444),g=r(26087),w=r(60480);function G(o,e){if(!(0,w.U)(o,{strict:!1}))throw new g.b({address:o});if(!(0,w.U)(e,{strict:!1}))throw new g.b({address:e});return o.toLowerCase()===e.toLowerCase()}var M=r(57040),R=r(15102);const S="0x556f1830",$={name:"OffchainLookup",type:"error",inputs:[{name:"sender",type:"address"},{name:"urls",type:"string[]"},{name:"callData",type:"bytes"},{name:"callbackFunction",type:"bytes4"},{name:"extraData",type:"bytes"}]};async function C(o,{blockNumber:e,blockTag:t,data:c,to:i}){const{args:d}=(0,E.p)({data:c,abi:[$]}),[a,f,u,s,n]=d;try{if(!G(i,a))throw new k({sender:a,to:i});const h=await P({data:u,sender:a,urls:f}),{data:A}=await(0,v.RE)(o,{blockNumber:e,blockTag:t,data:(0,M.zo)([s,(0,x.E)([{type:"bytes"},{type:"bytes"}],[h,n])]),to:i});return A}catch(h){throw new L({callbackSelector:s,cause:h,data:c,extraData:n,sender:a,urls:f})}}async function P({data:o,sender:e,urls:t}){var i;let c=new Error("An unknown error occurred.");for(let d=0;d<t.length;d++){const a=t[d],f=a.includes("{data}")?"GET":"POST",u=f==="POST"?{data:o,sender:e}:void 0;try{const s=await fetch(a.replace("{sender}",e).replace("{data}",o),{body:JSON.stringify(u),method:f});let n;if((i=s.headers.get("Content-Type"))!=null&&i.startsWith("application/json")?n=(await s.json()).data:n=await s.text(),!s.ok){c=new y.Gg({body:u,details:n!=null&&n.error?(0,p.P)(n.error):s.statusText,headers:s.headers,status:s.status,url:a});continue}if(!(0,R.v)(n)){c=new O({result:n,url:a});continue}return n}catch(s){c=new y.Gg({body:u,details:s.message,url:a})}}throw c}}}]);
